@model  EmanTraders.Models.ViewModels.PaymentListViewModel

@{
    ViewBag.Title = "Receipt List";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<style>
    .typeahead__list {
        max-height: 200px;
        overflow: auto;
    }
</style>

<div class="row clearfix">
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
        <div class="card">
            <div class="header">
                <h2>
                    Receipt List
                </h2>

                <div class="header-dropdown m-r--5">
                    <a href="~/Payments/Receipt" class="btn btn-danger waves-effect pull-right">
                        <i class="material-icons">add</i>
                        <span>ADD</span>
                    </a>
                </div>
            </div>
            <div class="body">
                <div class="row clearfix">
                    <div class="col-md-3">
                        <p>
                            <b>Accounts</b>
                        </p>
                        @Html.DropDownListFor(x => x.AccountID, Model.AccountList, "Select", new { @class = "form-control js-select2" })
                    </div>
                    <div class="col-md-2">
                        <p>
                            <b>From Date</b>
                        </p>
                        @Html.TextBoxFor(x => x.StartDate, new { @class = "form-control icon-download appdatepicker" })
                    </div>
                    <div class="col-md-2">
                        <p>
                            <b>To Date</b>
                        </p>
                        @Html.TextBoxFor(x => x.EndDate, new { @class = "form-control icon-download appdatepicker" })
                    </div>
                    <div class="col-md-2">
                        <p style="color:white;">
                            <b>.</b>
                        </p>
                        <button id="btnSearch" type="button" class="btn btn-danger waves-effect">Search</button>
                    </div>
                </div>

                <div id="divResult">
                </div>

            </div>
        </div>
    </div>
</div>


<script>
    $(document).ready(function () {
        InitTypeHead();

        LoadData('0', $("#StartDate").val(), $("#EndDate").val());
        $('#btnSearch').click(function () {
            LoadData($("#ddlAccounts").val(), $("#StartDate").val(), $("#EndDate").val());
        });
    });

    function LoadData(accountID, startDate, endDate) {
        var model = {
            AccountsID: accountID,
            StartDate: startDate,
            EndDate: endDate
        };
        $('.page-loader-wrapper').show();

        $.ajax({
            type: "POST",
            url: '@Url.Action("GetReceipts")',
            data: JSON.stringify(model),
            contentType: "application/json; charset=utf-8",
            dataType: "html",
            success: function (response) {

                $('#divResult').html(response);
                $('.page-loader-wrapper').hide();
            },
            failure: function (response) {
                $('.page-loader-wrapper').hide();
                alert(response.responseText);
            },
            error: function (response) {
                $('.page-loader-wrapper').hide();
                alert(response.responseText);
            }
        });
        //$("#divResult").load('@Url.Action("GetReceipts")', model);
    }

    function RemoveRow(paymentId) {
        if (confirm('Are you sure to want to delete?') == false) {
            return false;
        }
        var model = {
            PaymentId: paymentId
        };
        $.ajax({
            type: "POST",
            url: '@Url.Action("DeleteReceipt")',
            data: JSON.stringify(model),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            async: true,
            success: function (res) {
                if (res.Result == "OK") {
                    $('.page-loader-wrapper').hide();

                    AlertMsg('<strong>Success! </strong>', res.detail, 'info');
                    setTimeout(function () {
                        location.reload();
                    }, 1000);
                }
                else {
                    $('.page-loader-wrapper').hide();
                    AlertMsg('<strong>Error! </strong>', res.detail, 'info');
                }
            },
            failure: function (response) {
                console.log(response);
            },
            error: function (response) {
                console.log(response.responseText);
            }
        });
    }

    function InitTypeHead() {
        $('.js-typeahead').typeahead({
            hint: true,
            minLength: 2,
            template: function (query, item) {
                return "<div class='suggest-item'>{{Name}}</div>";
            },
            source: {
                "Items": {
                    ajax: {
                        url: "@Url.Action("GetValueAutoComplate")",
                        path: "Items"
                    },
                    display: "Name"
                }
            },
            callback: {
                onClickAfter: function (node, a, item, event) {
                    $('#TypeSearch').val(item.group);
                    $('#Keyword').val(item.Name);
                    $('#itemID').val(item.Id);

                }
            }
        });
    }

</script>
