@model SamaaMarketing.Models.ViewModels.AddEditBankAccountViewModel

@{
    ViewBag.Title = "Account";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<style>
    .textRight {
        text-align: right;
    }
</style>

@using (Html.BeginForm("Account", "Accounts", FormMethod.Post))
{

    @Html.HiddenFor(x => x.ID)

    <div class="row clearfix">
        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
            <div class="card">
                <div class="header">
                    <h2>
                        Bank Account
                    </h2>
                </div>
                <div class="body">
                    <div class="row clearfix">
                        <div class="col-md-3">
                            <p>
                                <b>Bank Name</b>
                            </p>
                            @Html.TextBoxFor(x => x.BankName, new { @class = "form-control " })
                        </div>
                        <div class="col-md-3">
                            <p>
                                <b>Bank Branch</b>
                            </p>
                            @Html.TextBoxFor(x => x.BankBranch, new { @class = "form-control " })
                        </div>
                        <div class="col-md-3">
                            <p>
                                <b>Bank City</b>
                            </p>
                            @Html.TextBoxFor(x => x.BankBranchCity, new { @class = "form-control " })
                        </div>
                        <div class="col-md-3">
                            <p>
                                <b>Account Title</b>
                            </p>
                            @Html.TextBoxFor(x => x.AccountTitle, new { @class = "form-control" })
                        </div>
                        <div class="col-md-3">
                            <p>
                                <b>Account #</b>
                            </p>
                            @Html.TextBoxFor(x => x.AccountNumber, new { @class = "form-control" })
                        </div>
                        <div class="col-md-2">
                            <p>
                                <b>Opening Balance</b>
                            </p>
                            @Html.TextBoxFor(x => x.OpeningBalance, new { @class = "form-control AllowDecimal" })
                        </div>
                        <div class="col-md-2">
                            <p>
                                <b>Opening Balance Date</b>
                            </p>
                            @Html.TextBoxFor(x => x.OpeningBalanceDate, new { @class = "form-control appdatepicker openingBalanceDate" })
                        </div>
                        <div class="col-md-3">
                            <p>
                                <b>Contact #</b>
                            </p>
                            @Html.TextBoxFor(x => x.ContactNo, new { @class = "form-control OnlyNumbers" })
                        </div>
                    </div>
                    <div class="row clearfix">
                        <div class="col-md-5 pull-right">
                            <button type="button" id="btnSave" class="btn btn-success waves-effect pull-right">
                                <i class="material-icons">add_shopping_cart</i>
                                <span>Save</span>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

}


<script>
    $(".AllowDecimal").on("keypress keyup blur", function (event) {
        //this.value = this.value.replace(/[^0-9\.]/g,'');
        $(this).val($(this).val().replace(/[^0-9\.]/g, ''));
        if ((event.which != 46 || $(this).val().indexOf('.') != -1) && (event.which < 48 || event.which > 57)) {
            event.preventDefault();
        }
    });

    $(".OnlyNumbers").on("keypress keyup blur", function (event) {
        $(this).val($(this).val().replace(/[^\d].+/, ""));
        if ((event.which < 48 || event.which > 57)) {
            event.preventDefault();
        }
    });

    $(document).ready(function () {
        $('#btnSave').click(function () {
            Checkout();
        });
    });

    function Checkout() {
        var table = document.getElementById("tbl"); //get the table

        if ($("#BankName").val() == "") {
            AlertMsg('<strong>Required!</strong>', 'Bank Name is Required!', 'info');
            $('#BankName').focus();
            return;
        }
        if ($("#BankBranch").val() == "") {
            AlertMsg('<strong>Required!</strong>', 'Bank Branchis Required!', 'info');
            $('#BankBranch').focus();
            return;
        }
        if ($("#BankBranchCity").val() == "") {
            AlertMsg('<strong>Required!</strong>', 'Branch City Branch is Required!', 'info');
            $('#BankBranchCity').focus();
            return;
        }
        if ($("#AccountTitle").val() == "") {
            AlertMsg('<strong>Required!</strong>', 'Account Title is Required!', 'info');
            $('#AccountTitle').focus();
            return;
        }
        if ($("#AccountNumber").val() == "") {
            AlertMsg('<strong>Required!</strong>', 'Account # is Required!', 'info');
            $('#AccountNumber').focus();
            return;
        }
        if ($("#ContactNo").val() == "") {
            AlertMsg('<strong>Required!</strong>', 'Contact # is Required!', 'info');
            $('#ContactNo').focus();
            return;
        }
        if ($("#OpeningBalance").val() == "") {
            AlertMsg('<strong>Required!</strong>', 'Opening Balance is Required!', 'info');
            $('#OpeningBalance').focus();
            return;
        }
        if ($('.openingBalanceDate').val() == "") {
            AlertMsg('<strong>Required!</strong>', 'Opening Balance Date Required', 'info');
            $('.openingBalanceDate').focus();
            return false;
        }

        var model = GetDataModel();

        //Show loader here
        $('.page-loader-wrapper').show();
        $.ajax({
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            type: 'POST',
            url: "@Url.Action("SaveAccount")",
            data: JSON.stringify(model),
            success: function (res) {
                if (res.Result == "OK") {
                    AlertMsg('<strong>Success! </strong>', res.detail, 'info');
                    setTimeout(function () {
                        location.reload();
                    }, 2000);
                }
                else {
                    $('.page-loader-wrapper').hide();
                    AlertMsg('<strong>Error! </strong>', res.detail, 'info');
                }
            },
            failure: function (response) {
                $('#result').html(response);
            },
            complete: function () {
                $('.page-loader-wrapper').hide();
            }
        });
    }

    function GetDataModel() {
        var model = {
            BankName: $('#BankName').val(),
            BankBranch: $("#BankBranch").val(),
            BankBranchCity: $("#BankBranchCity").val(),
            AccountTitle: $("#AccountTitle").val(),
            AccountNumber: $("#AccountNumber").val(),
            ContactNo: $('#ContactNo').val(),
            OpeningBalance: $('#OpeningBalance').val(),
            OpeningBalanceDate: $('.openingBalanceDate').val(),
            ID: $('#ID').val()
        };
        return model;
    }
</script>

