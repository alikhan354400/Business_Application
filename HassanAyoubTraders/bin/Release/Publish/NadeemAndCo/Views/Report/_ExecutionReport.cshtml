@model NadeemAndCo.Models.ViewModels.ExecutionReportViewModel
@using System.Globalization;

@{
    CultureInfo ciPk = new CultureInfo("ur-PK");
}

@Html.HiddenFor(model => model.ReportName)
<div id="dvTableHeader" class="dvTableHeader" style="text-align:center; display:none;">
    <span>
        <strong>@Model.ReportName</strong>
    </span><br />
    <span style="text-align:center;"><strong>Outstanding Report For the Period from :</strong> @Model.StartDate <strong> to </strong> @Model.EndDate</span>
    <hr />
</div>

<table class="table table-striped table-bordered datatablethis" id="tbl">
    <thead>
        <tr>
            <th style="width: 5%; text-align:center;">Sr #</th>
            <th style="width: 5%; text-align:center;">Code</th>
            <th style="text-align:center;">Product</th>
            <th style="width: 10%; text-align:center;" class="lblSaleQty">Qty</th>
            <th style="width: 10%; text-align:center;" class="lblSalePrice">Price</th>
            <th style="width: 10%; text-align:center;">Ret Qty</th>
            <th style="width: 10%; text-align:center;">Ret Price</th>
            <th style="width: 10%; text-align:center;">Remaining Qty</th>
            <th style="width: 10%; text-align:center;">Remaining Price</th>
        </tr>
    </thead>
    <tbody>
        @{
            int srNo = 0;
            foreach (var item in Model.ExecutionReportDetail)
            {
                <tr>
                    <td style="text-align:center;">@(++srNo)</td>
                    <td style="text-align:center;">@item.SubItemID</td>
                    <td>@item.ItemName - @item.SubItemName</td>
                    <td style="text-align:right;">
                        @{
                            decimal pTotalSalesQuantity = decimal.Parse(item.TotalSQ.ToString(), CultureInfo.InvariantCulture);
                            string TotalSalesQuantity = string.Format(ciPk, "{0}", pTotalSalesQuantity);
                        }
                        @TotalSalesQuantity
                    </td>
                    <td style="text-align:right;">
                        @{
                            decimal pTotalSalesPrice = decimal.Parse(item.TotalSP.ToString(), CultureInfo.InvariantCulture);
                            string TotalSalesPrice = string.Format(ciPk, "{0:c}", pTotalSalesPrice);
                        }
                        @TotalSalesPrice
                    </td>
                    <td style="text-align:right;">
                        @{
                            decimal pTotalSalesReturnQuantity = decimal.Parse(item.TotalRQ.ToString(), CultureInfo.InvariantCulture);
                            string TotalSalesReturnQuantity = string.Format(ciPk, "{0}", pTotalSalesReturnQuantity);
                        }
                        @TotalSalesReturnQuantity
                    </td>
                    <td style="text-align:right;">
                        @{
                            decimal pTotalSalesReturnPrice = decimal.Parse(item.TotalRP.ToString(), CultureInfo.InvariantCulture);
                            string TotalSalesReturnPrice = string.Format(ciPk, "{0:c}", pTotalSalesReturnPrice);
                        }
                        @TotalSalesReturnPrice
                    </td>
                    <td style="text-align:right;">
                        @{
                            decimal pTotalQty = decimal.Parse((item.RemainingQty).ToString(), CultureInfo.InvariantCulture);
                            string TotalQty = string.Format(ciPk, "{0}", pTotalQty);
                        }
                        @TotalQty
                    </td>
                    <td style="text-align:right;">
                        @{
                            decimal pTotalPrice = decimal.Parse((item.RemainingPrice).ToString(), CultureInfo.InvariantCulture);
                            string TotalPrice = string.Format(ciPk, "{0:c}", pTotalPrice);
                        }
                        @TotalPrice
                    </td>
                </tr>
            }
        }


    </tbody>
    <tfoot>
        <tr>
            <td></td>
            <td></td>
            <td style="text-align:center;"><strong>Total</strong></td>
            <td style="text-align:right;">
                <strong>
                    @{
                        decimal pfTotalSalesQuantity = decimal.Parse(Model.ExecutionReportDetail.Sum(x => x.TotalSQ).ToString(), CultureInfo.InvariantCulture);
                        string pppfTotalSalesQuantity = string.Format(ciPk, "{0}", pfTotalSalesQuantity);
                    }
                    @pppfTotalSalesQuantity
                </strong>
            </td>
            <td style="text-align:right;">
                <strong>
                    @{
                        decimal pfTotalSalesPrice = decimal.Parse(Model.ExecutionReportDetail.Sum(x => x.TotalSP).ToString(), CultureInfo.InvariantCulture);
                        string pppfTotalSalesPrice = string.Format(ciPk, "{0:c}", pfTotalSalesPrice);
                    }
                    @pppfTotalSalesPrice
                </strong>
            </td>
            <td style="text-align:right;">
                <strong>
                    @{
                        decimal pfTotalSalesReturnQuantity = decimal.Parse(Model.ExecutionReportDetail.Sum(x => x.TotalRQ).ToString(), CultureInfo.InvariantCulture);
                        string pppfTotalSalesReturnQuantity = string.Format(ciPk, "{0}", pfTotalSalesReturnQuantity);
                    }
                    @pppfTotalSalesReturnQuantity
                </strong>
            </td>
            <td style="text-align:right;">
                <strong>
                    @{
                        decimal pfTotalSalesReturnPrice = decimal.Parse(Model.ExecutionReportDetail.Sum(x => x.TotalRP).ToString(), CultureInfo.InvariantCulture);
                        string pppfTotalSalesReturnPrice = string.Format(ciPk, "{0:c}", pfTotalSalesReturnPrice);
                    }
                    @pppfTotalSalesReturnPrice
                </strong>
            </td>
            <td style="text-align:right;">
                <strong>
                    @{
                        decimal pfTotaQty = decimal.Parse(Model.ExecutionReportDetail.Sum(x => (x.RemainingQty)).ToString(), CultureInfo.InvariantCulture);
                        string pppfTotaQty = string.Format(ciPk, "{0}", pfTotaQty);
                    }
                    @pppfTotaQty
                </strong>
            </td>
            <td style="text-align:right;">
                <strong>
                    @{
                        decimal pfTotaPrice = decimal.Parse(Model.ExecutionReportDetail.Sum(x => (x.RemainingPrice)).ToString(), CultureInfo.InvariantCulture);
                        string pppfTotaPrice = string.Format(ciPk, "{0:c}", pfTotaPrice);
                    }
                    @pppfTotaPrice
                </strong>
            </td>
        </tr>

        <tr>
            <td></td>
            <td></td>
            <td style="text-align:center;"></td>
            <td style="text-align:right;"></td>
            <td style="text-align:right;"></td>
            <td style="text-align:right;"></td>
            <td style="text-align:right;"></td>
            <td style="text-align:right;"><strong>Total Recovery</strong></td>
            <td style="text-align:right;">
                <strong>
                    @{
                        decimal pfTotalRecovery = decimal.Parse(Model.TotalRecovery.ToString(), CultureInfo.InvariantCulture);
                        string pppfTotaRecovery = string.Format(ciPk, "{0:c}", pfTotalRecovery);
                    }
                    @pppfTotaRecovery
                </strong>
            </td>
        </tr>
    </tfoot>

</table>


<script>
    $(document).ready(function () {
        //var isPurchase = $('.rdoPurchase').is(":checked");
        //if (isPurchase) {
        //    $('.lblSaleQty').text('Purchase Qty');
        //    $('.lblSalePrice').text('Purchase Price');
        //}

        $('.datatablethis').DataTable();

    });

</script>
