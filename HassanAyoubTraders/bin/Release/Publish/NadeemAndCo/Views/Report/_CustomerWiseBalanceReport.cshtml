@model NadeemAndCo.Models.ViewModels.CustomerWiseBalanceViewModel
@using System.Globalization;

@{
    CultureInfo ciPk = new CultureInfo("ur-PK");
}

@Html.HiddenFor(model => model.ReportName)
<div id="dvTableHeader" class="dvTableHeader" style="text-align:center; display:none;">
    <span>
        <strong>@Model.ReportName</strong>
    </span><br />
    <span style="text-align:center;"><strong>Outstanding Report For the Period from :</strong> @Model.StartDate <strong> to </strong> @Model.EndDate</span>
    <hr />
</div>

<table class="table table-striped table-bordered datatablethis" id="tbl">
    <thead>
        <tr>
            <th style="width: 5%; text-align:center;">Sr #</th>
            <th style="width: 10%; text-align:center;">Acc #</th>
            <th style="text-align:center;">Customer</th>
            <th style="width: 10%; text-align:center;">Op-Balance</th>
            <th style="width: 10%; text-align:center;">Sale</th>
            <th style="width: 10%; text-align:center;">Sale Ret</th>
            <th style="width: 10%; text-align:center;">Amount Rec</th>
            <th style="width: 10%; text-align:center;">Balance</th>
        </tr>
    </thead>
    <tbody>
        @{
            int srNo = 0;
            foreach (var item in Model.CustomerWiseBalanceDetail)
            {
                <tr>
                    <td style="text-align:center;">@(++srNo)</td>
                    <td style="text-align:center;">@item.AccountID</td>
                    <td>@item.CustomerName</td>
                    <td style="text-align:right;">
                        @{
                            decimal pOpeningBalance = decimal.Parse(item.OpeningBalance.ToString(), CultureInfo.InvariantCulture);
                            string OpeningBalance = string.Format(ciPk, "{0:c}", pOpeningBalance);
                        }
                        @OpeningBalance
                    </td>
                    <td style="text-align:right;">
                        @{
                            decimal pTotalSales = decimal.Parse(item.TotalSales.ToString(), CultureInfo.InvariantCulture);
                            string TotalSales = string.Format(ciPk, "{0:c}", pTotalSales);
                        }
                        @TotalSales
                    </td>
                    <td style="text-align:right;">
                        @{
                            decimal pTotalSalesReturn = decimal.Parse(item.TotalSalesReturn.ToString(), CultureInfo.InvariantCulture);
                            string TotalSalesReturn = string.Format(ciPk, "{0:c}", pTotalSalesReturn);
                        }
                        @TotalSalesReturn
                    </td>
                    <td style="text-align:right;">
                        @{
                            decimal pTotalAmountReceived = decimal.Parse(item.TotalAmountReceived.ToString(), CultureInfo.InvariantCulture);
                            string TotalAmountReceived = string.Format(ciPk, "{0:c}", pTotalAmountReceived);
                        }
                        @TotalAmountReceived
                    </td>
                    <td style="text-align:right;">
                        @{
                            decimal pBalance = decimal.Parse(item.Balance.ToString(), CultureInfo.InvariantCulture);
                            string Balance = string.Format(ciPk, "{0:c}", pBalance);
                        }
                        @Balance
                    </td>
                </tr>
            }
        }

    </tbody>
    <tfoot>
        <tr>
            <td></td>
            <td></td>
            <td style="text-align:center;"><strong>Total</strong></td>
            <td style="text-align:right;">
                <strong>
                    @{
                        decimal pfOpeningBalance = decimal.Parse(Model.CustomerWiseBalanceDetail.Sum(x => x.OpeningBalance).ToString(), CultureInfo.InvariantCulture);
                        string pppfOpeningBalance = string.Format(ciPk, "{0:c}", pfOpeningBalance);
                    }
                    @pppfOpeningBalance
                </strong>
            </td>
            <td style="text-align:right;">
                <strong>
                    @{
                        decimal pfTotalSales = decimal.Parse(Model.CustomerWiseBalanceDetail.Sum(x => x.TotalSales).ToString(), CultureInfo.InvariantCulture);
                        string pppfTotalSales = string.Format(ciPk, "{0:c}", pfTotalSales);
                    }
                    @pppfTotalSales
                </strong>
            </td>
            <td style="text-align:right;">
                <strong>
                    @{
                        decimal pfTotalSalesReturn = decimal.Parse(Model.CustomerWiseBalanceDetail.Sum(x => x.TotalSalesReturn).ToString(), CultureInfo.InvariantCulture);
                        string pppfTotalSalesReturn = string.Format(ciPk, "{0:c}", pfTotalSalesReturn);
                    }
                    @pppfTotalSalesReturn
                </strong>
            </td>
            <td style="text-align:right;">
                <strong>
                    @{
                        decimal pfTotalAmountReceived = decimal.Parse(Model.CustomerWiseBalanceDetail.Sum(x => x.TotalAmountReceived).ToString(), CultureInfo.InvariantCulture);
                        string pppfTotalAmountReceived = string.Format(ciPk, "{0:c}", pfTotalAmountReceived);
                    }
                    @pppfTotalAmountReceived
                </strong>
            </td>
            <td style="text-align:right;">
                <strong>
                    @{
                        decimal pfBalance = decimal.Parse(Model.CustomerWiseBalanceDetail.Sum(x => x.Balance).ToString(), CultureInfo.InvariantCulture);
                        string pppfBalance = string.Format(ciPk, "{0:c}", pfBalance);
                    }
                    @pppfBalance
                </strong>
            </td>
        </tr>
    </tfoot>

</table>


<script>
    $(document).ready(function () {
        $('.datatablethis').DataTable();
    });
</script>
