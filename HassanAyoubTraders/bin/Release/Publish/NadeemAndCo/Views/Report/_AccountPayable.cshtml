@model NadeemAndCo.Models.ViewModels.LedgerViewModel
@using System.Globalization;

@{
    CultureInfo ciPk = new CultureInfo("ur-PK");
    var index = 1;
}

@Html.HiddenFor(model => model.ReportName)
<div id="dvTableHeader" class="dvTableHeader" style="text-align:center; display:none;">
    <span>
        <strong>@Model.ReportName</strong>
    </span>
    <hr />
</div>

<table class="table table-striped table-bordered datatablethis" id="tbl">
    <thead>
        <tr>
            <th style="width: 10%; text-align:center;">Sr #</th>
            <th style="width: 10%; text-align:center;">Account #</th>
            <th style="text-align:center;">Name</th>
            <th style="width: 10%; text-align:center;">Balance</th>
        </tr>
    </thead>
    <tbody>
        @{
            if (Model.AccountPayableList != null && Model.AccountPayableList.Count > 0)
            {
                foreach (var item in Model.AccountPayableList)
                {
                    <tr>
                        <td style="text-align:center;">@index</td>
                        <td style="text-align:center;">@item.ID</td>
                        <td>@item.Name</td>
                        <td style="text-align:right;">
                            @{
                                decimal parsePayableAmount = decimal.Parse(item.PayableAmount.ToString(), CultureInfo.InvariantCulture);
                                string payableAmount = string.Format(ciPk, "{0:c}", parsePayableAmount);
                            }
                            @payableAmount
                        </td>
                    </tr>
                    { index = index + 1; }
                }
            }
            else
            {
                <tr>
                    <td colspan="6">No record found.</td>
                </tr>
            }
        }
    </tbody>
    <tfoot>
        <tr>
            <td style="text-align:center;"></td>
            <td style="text-align:center;"></td>
            <td style="text-align:center;"><strong>Total</strong></td>
            <td style="text-align:right;">
                <strong>
                    @{
                        decimal prTFooter = decimal.Parse(Model.AccountPayableList.Sum(x => x.PayableAmount).ToString(), CultureInfo.InvariantCulture);
                        string rvfTooter = string.Format(ciPk, "{0:c}", prTFooter);
                    }
                    @rvfTooter
                </strong>
            </td>
        </tr>
    </tfoot>
</table>


<script>
    $(document).ready(function () {
        $('.datatablethis').DataTable();


        //$(window).blur(function () {
        //    $('.dvTableHeader').hide();
        //});

        //$('.datatablethis').DataTable({
        //    dom: 'Bfrtip',
        //    buttons: [
        //        //{ extend: 'copy', text: 'Copy', message: function () { return 'FK Industries \r\n Account Payable Report' } },
        //        //{ extend: 'csv', text: 'CSV', message: function () { return 'FK Industries \r\n Account Payable Report' } },
        //        //{ extend: 'excel', text: 'Excel', title: function () { return 'FK Industries \r\n Account Payable Report' } },
        //        {
        //            extend: 'pdfHtml5',
        //            text: 'PDF',
        //            title: function () { return 'FK Industries \r\n ' + $('#ReportName').val();},
        //            footer: false,
        //            exportOptions: {
        //                columns: ':visible'
        //            },
        //            customize: function (doc) {
        //                doc.content.forEach(function (item) {
        //                    if (item.table) {
        //                        item.table.widths = [30, 60, '*', 100]
        //                    }
        //                });
        //                doc.defaultStyle.fontSize = 7;
        //                doc.styles.tableHeader.fontSize = 7;
        //                doc.styles.tableFooter.fontSize = 7;

        //            }
        //        },
        //        {
        //            extend: 'print', text: 'Print',
        //            message: function () { $('.dvTableHeader').show(); return $('.dvTableHeader').html(); },
        //            footer: true,
        //            customize: function (win) {
        //                $(win.document.body)
        //                    .css('font-size', '10pt')

        //                $(win.document.body).find('table')
        //                    .addClass('compact')
        //                    .css('font-size', '10px');
        //            }
        //        }
        //    ]
        //});

    });
</script>