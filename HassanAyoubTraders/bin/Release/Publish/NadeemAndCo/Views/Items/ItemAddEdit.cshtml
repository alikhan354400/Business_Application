@model NadeemAndCo.Models.ViewModels.ItemAddEditListViewModel

@{
    ViewBag.Title = "Add/Edit Item";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

@using (Html.BeginForm("", "", FormMethod.Post, new { id = "add-edit-item" }))
{

    @Html.HiddenFor(x => x.ItemID)

    <div class="row clearfix">
        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
            <div class="card">
                <div class="header">
                    <h2>
                        Add / Edit Item
                    </h2>
                </div>
                <div class="body">
                    <div class="row clearfix">
                        <div class="col-md-4">
                            <p>
                                <b>Vendor</b>
                            </p>
                            @Html.DropDownListFor(x => x.VendorId, Model.VendorList, "Select", new { @class = "form-control input-sm  js-select2 " })
                        </div>

                        <div class="col-md-4">
                            <p>
                                <b>Product Name</b>
                            </p>
                            @Html.TextBoxFor(x => x.ProductName, new { @class = "form-control input-sm" })
                        </div>


                        <div class="col-md-4">
                            <p>
                                <b>Unit Type</b>
                            </p>
                            @Html.DropDownListFor(x => x.UnitTypeID, Model.UnitTypeList, "Select", new { @class = "form-control input-sm  js-select2" })
                        </div>

                        <div class="col-md-12">
                            <p>
                                <b>Description</b>
                            </p>
                            @Html.TextAreaFor(x => x.Description, new { @class = "form-control input-sm" })
                        </div>

                    </div>
                    <div class="row clearfix">
                        <div class="col-md-5 pull-right">
                            <button type="button" id="btnSave" class="btn btn-success waves-effect pull-right">
                                <i class="material-icons">add_shopping_cart</i>
                                <span>Save</span>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

}


<script>


    $(document).ready(function () {

        $("#add-edit-item :input").change(function () {
            $("#add-edit-item").data("changed", true);
        });

        $('#btnSave').click(function () {
            Save();
        });
    });

    function Validation() {
        if ($("#VendorId").val() == "") {
            AlertMsg('<strong>Alert!</strong>', 'Company is Required!', 'info');
            $('#VendorId').focus();
            return false;
        }

        if ($("#ProductName").val() == "") {
            AlertMsg('<strong>Alert!</strong>', 'Product Name is Required!', 'info');
            $('#ProductName').focus();
            return;
        }

        if ($("#UnitTypeID").val() == "") {
            AlertMsg('<strong>Alert!</strong>', 'Unit Type is Required!', 'info');
            $('#UnitTypeID').focus();
            return;
        }

        return true;
    }

    function Save() {

        if (!$("#add-edit-item").data("changed")) {
            AlertMsg('', '<strong>Form is unchanged!</strong>', 'warning');
            return;
        }


        if (Validation() == true) {
            var model = GetDataModel();

            //Show loader here
            $('.page-loader-wrapper').show();
            $.ajax({
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                type: 'POST',
                url: "@Url.Action("SaveAddEdit")",
                data: JSON.stringify(model),
                success: function (res) {
                    if (res.Result == "OK") {
                        AlertMsg('<strong>Success! </strong>', res.detail, 'info');
                        setTimeout(function () {
                            location.reload();
                        }, 2000);
                    }
                    else {
                        $('.page-loader-wrapper').hide();
                        AlertMsg('<strong>Error! </strong>', res.detail, 'info');
                    }
                },
                failure: function (response) {
                    $('#result').html(response);
                },
                complete: function () {
                    $('.page-loader-wrapper').hide();
                }
            });
        }
    }

    function GetDataModel() {
        var model = {
            VendorId: $('#VendorId').val(),
            ItemID: $('#ItemID').val(),
            UnitTypeID: $('#UnitTypeID').val(),
            ProductName: $('#ProductName').val(),
            Description: $('#Description').val()
        };
        return model;
    }
</script>
